---
version: "3.9"

# x-required:
#   - "${REPO_DIR:?Path to repository root in the container}"

x-django:
  &__django_service
  build:
    context: ..
    dockerfile: .devcontainer/Dockerfile
    target: dev
  env_file:
    - ../.env
    # - ../backend/.env
  depends_on:
    - postgres-db
    - redis-db
  # entrypoint:
  #   - ${REPO_DIR:-/code}/backend/.venv/bin/python
  #   - -m
  #   - djproj
  # command:
  #   - --help

x-celery:
  &__celery_service
  <<: *__django_service
  entrypoint:
    - ${REPO_DIR:-/code}/backend/.venv/bin/python
    - -m
    - celery
    - --app=${CELERY_APP:-djproj.celery:app}

# x-next:
#   &__next_service
#   build:
#     context: ..
#     dockerfile: .devcontainer/Dockerfile
#   env_file:
#     - ../.env
#     # - ../frontend/.env
#   depends_on:
#     - django-server
#   entrypoint:
#     - yarn
#   command:
#     - --help

services:
  django-server:
    <<: *__django_service
    # command:
    #   - runserver
    #   - "${DJANGO_HOST:-0.0.0.0}:${DJANGO_PORT:-8000}"
    # Overrides default command so things don't shut down after the process ends.
    # entrypoint: []
    command: sleep infinity

    volumes:
      - ..:/${REPO_DIR:-/code}:cached
      # - ${REPO_DIR:-/code}/backend/.venv

    # # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:postgres-db

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    expose:
      - ${DJANGO_PORT:-8000}
    ports:
      - published: ${DJANGO_PORT:-8000}
        target: 8000

  celery-worker:
    <<: *__celery_service
    command:
      - worker
      - --events
      - --concurrency=${CELERY_WORKER_CONCURRENCY:-1}
      - --queues=${CELERY_WORKER_QUEUES:-general,schedule}

  celery-beat:
    <<: *__celery_service
    command:
      - beat
      - --events
      # - --scheduler=django_celery_beat.schedulers:DatabaseScheduler

  celery-flower:
    <<: *__celery_service
    command:
      - flower
      - --port=${FLOWER_PORT:-5555}

    # Use "forwardPorts" in **devcontainer.json** to forward Flower locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    expose:
      - ${FLOWER_PORT:-5555}
    ports:
      - published: ${FLOWER_PORT:-5555}
        target: 5555

  # next-server:
  #   <<: *__next_service
  #   command:
  #     - run
  #     - start
  #   volumes:
  #     - .:${REPO_DIR:-/code}:cached
  #     - ${REPO_DIR:-/code}/frontend/node_modules
  #     # - ${REPO_DIR:-/code}/frontend/packages/app/node_modules
  #     # - ${REPO_DIR:-/code}/frontend/packages/backend/node_modules

  postgres-db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ../.env

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    expose:
      - ${POSTGRES_PORT:-5432}
    ports:
      - published: ${POSTGRES_PORT:-5432}
        target: 5432

  redis-db:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis-data:/data
    env_file:
      - ../.env

    # Add "forwardPorts": ["6379"] to **devcontainer.json** to forward Redis locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    expose:
      - ${REDIS_PORT:-6379}
    ports:
      - published: ${REDIS_PORT:-6379}
        target: 6379

volumes:
  postgres-data:
  redis-data:
