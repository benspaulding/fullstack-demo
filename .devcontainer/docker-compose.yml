---
version: "3.9"

x-required:
  - "${REPO_DIR:?Path to repository root in the container}"

x-django:
  &__django_service
  build:
    context: ..
    dockerfile: .devcontainer/Dockerfile
  env_file:
    - ${REPO_DIR}/.env
    - ${REPO_DIR}/backend/.env
  depends_on:
    - data-postgres
    - data-redis
  profiles:
    - backend
  entrypoint:
    - ${REPO_DIR}/backend/.venv/bin/python
    - -m
    - djproj
  command:
    - --help

x-celery:
  &__celery_service
  <<: *__django_service
  profiles:
    - backend
    - celery
  entrypoint:
    - ${REPO_DIR}/backend/.venv/bin/python
    - -m
    - celery
    - --app=${CELERY_APP:-djproj.celery:app}

x-next:
  &__next_service
  build:
    context: ..
    dockerfile: .devcontainer/Dockerfile
  env_file:
    - ${REPO_DIR}/.env
    - ${REPO_DIR}/frontend/.env
  depends_on:
    - django-server
  profiles:
    - frontend
  entrypoint:
    - yarn
  command:
    - --help

services:
  django-server:
    <<: *__django_service
    command:
      - runserver
      - "${BE_SERVER_HOST:-0.0.0.0}:${BE_SERVER_PORT:-8000}"
    #
    # volumes:
    #   - ../..:/workspaces:cached

    # # Overrides default command so things don't shut down after the process ends.
    # command: sleep infinity

    # # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:data-postgres

    # # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # # (Adding the "ports" property to this file will not forward from a Codespace.)

  celery-worker:
    <<: *__celery_service
    command:
      - worker
      - --concurrency=${CELERY_WORKER_CONCURRENCY:-1}
      - --queues=${CELERY_WORKER_QUEUES:-general,schedule}

  celery-beat:
    <<: *__celery_service
    command:
      - beat
      # - --scheduler=django_celery_beat.schedulers:DatabaseScheduler

  next-server:
    <<: *__next_service
    command:
      - run
      - start

  data-postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  data-redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis-data:/var/lib/redis/data

    # Add "forwardPorts": ["6379"] to **devcontainer.json** to forward Redis locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  postgres-data:
  redis-data:
